START 14735300: Thu Dec 22 17:08:01 EET 2022
Namespace(train=['data/train_en.jsonl'], test='data/test_fi_deepl.jsonl', model='xlm-roberta-large', batch=8, epochs=10, learning=3e-05, threshold=None, loss=True, dev=True, clean_as_label=True, binary=False, save=None)
['data/train_en.jsonl']
text      object
labels    object
dtype: object
text      object
labels    object
dtype: object
tensor([16.2248,  2.8940,  2.6981, 14.2921, 47.6901,  1.4905,  0.1590],
       device='cuda:0')
DatasetDict({
    train: Dataset({
        features: ['text', 'labels'],
        num_rows: 127656
    })
    dev: Dataset({
        features: ['text', 'labels'],
        num_rows: 31915
    })
    test: Dataset({
        features: ['text', 'labels'],
        num_rows: 63978
    })
})
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
{'loss': 0.5081, 'learning_rate': 2.952998683963151e-05, 'epoch': 0.16}
Best threshold: 0.3
                       precision    recall  f1-score   support

label_identity_attack       0.00      0.00      0.00       286
         label_insult       0.00      0.00      0.00      1533
        label_obscene       0.00      0.00      0.00      1648
label_severe_toxicity       0.00      0.00      0.00       324
         label_threat       0.00      0.00      0.00        89
       label_toxicity       0.00      0.00      0.00      3100

            micro avg       0.00      0.00      0.00      6980
            macro avg       0.00      0.00      0.00      6980
         weighted avg       0.00      0.00      0.00      6980
          samples avg       0.00      0.00      0.00      6980

{'eval_loss': 0.4740965664386749, 'eval_f1': 0.0, 'eval_f1_macro': 0.0, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_roc_auc': 0.5, 'eval_accuracy': 0.8974463418455272, 'eval_hamming loss': 0.03645098960781242, 'eval_runtime': 680.575, 'eval_samples_per_second': 46.894, 'eval_steps_per_second': 2.931, 'epoch': 0.16}
{'loss': 0.4871, 'learning_rate': 2.905997367926302e-05, 'epoch': 0.31}
Best threshold: 0.3
                       precision    recall  f1-score   support

label_identity_attack       0.00      0.00      0.00       286
         label_insult       0.00      0.00      0.00      1533
        label_obscene       0.00      0.00      0.00      1648
label_severe_toxicity       0.00      0.00      0.00       324
         label_threat       0.00      0.00      0.00        89
       label_toxicity       0.00      0.00      0.00      3100

            micro avg       0.00      0.00      0.00      6980
            macro avg       0.00      0.00      0.00      6980
         weighted avg       0.00      0.00      0.00      6980
          samples avg       0.00      0.00      0.00      6980

{'eval_loss': 0.47364112734794617, 'eval_f1': 0.0, 'eval_f1_macro': 0.0, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_roc_auc': 0.5, 'eval_accuracy': 0.8974463418455272, 'eval_hamming loss': 0.03645098960781242, 'eval_runtime': 680.2833, 'eval_samples_per_second': 46.914, 'eval_steps_per_second': 2.933, 'epoch': 0.31}
{'loss': 0.4695, 'learning_rate': 2.858996051889453e-05, 'epoch': 0.47}
Best threshold: 0.3
                       precision    recall  f1-score   support

label_identity_attack       0.00      0.00      0.00       286
         label_insult       0.00      0.00      0.00      1533
        label_obscene       0.00      0.00      0.00      1648
label_severe_toxicity       0.00      0.00      0.00       324
         label_threat       0.00      0.00      0.00        89
       label_toxicity       0.00      0.00      0.00      3100

            micro avg       0.00      0.00      0.00      6980
            macro avg       0.00      0.00      0.00      6980
         weighted avg       0.00      0.00      0.00      6980
          samples avg       0.00      0.00      0.00      6980

{'eval_loss': 0.4747752845287323, 'eval_f1': 0.0, 'eval_f1_macro': 0.0, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_roc_auc': 0.5, 'eval_accuracy': 0.8974463418455272, 'eval_hamming loss': 0.03645098960781242, 'eval_runtime': 680.6503, 'eval_samples_per_second': 46.889, 'eval_steps_per_second': 2.931, 'epoch': 0.47}
{'loss': 0.4862, 'learning_rate': 2.8119947358526038e-05, 'epoch': 0.63}
Best threshold: 0.3
                       precision    recall  f1-score   support

label_identity_attack       0.00      0.00      0.00       286
         label_insult       0.00      0.00      0.00      1533
        label_obscene       0.00      0.00      0.00      1648
label_severe_toxicity       0.00      0.00      0.00       324
         label_threat       0.00      0.00      0.00        89
       label_toxicity       0.00      0.00      0.00      3100

            micro avg       0.00      0.00      0.00      6980
            macro avg       0.00      0.00      0.00      6980
         weighted avg       0.00      0.00      0.00      6980
          samples avg       0.00      0.00      0.00      6980

{'eval_loss': 0.4611935615539551, 'eval_f1': 0.0, 'eval_f1_macro': 0.0, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_roc_auc': 0.5, 'eval_accuracy': 0.8974463418455272, 'eval_hamming loss': 0.03645098960781242, 'eval_runtime': 680.1327, 'eval_samples_per_second': 46.925, 'eval_steps_per_second': 2.933, 'epoch': 0.63}
Job ID: 14735300
Cluster: puhti
User/Group: annieske/annieske
State: RUNNING
Cores: 1
CPU Utilized: 00:00:00
CPU Efficiency: 0.00% of 02:08:33 core-walltime
Job Wall-clock time: 02:08:33
Memory Utilized: 7.83 GB
Memory Efficiency: 100.27% of 7.81 GB
Job consumed 132.37 CSC billing units based on following used resources
Billed project: project_2000539
CPU BU: 2.14
Mem BU: 1.67
GPU BU: 128.55
GPU job efficiency:
------------------------------------------------------------------------
Host memory 
     Hostname    Mean (GiB)  stdDev (GiB)     Max (GiB) 
       r15g04         14.28          1.57          14.5 
------------------------------------------------------------------------
GPU load 
     Hostname        GPU Id      Mean (%)    stdDev (%)       Max (%) 
       r15g04             2 [32m        95.32 [0m        15.33           100 
------------------------------------------------------------------------
GPU memory 
     Hostname        GPU Id    Mean (GiB)  stdDev (GiB)     Max (GiB) 
       r15g04             2          22.3          3.03         22.86 
------------------------------------------------------------------------
WARNING: Efficiency statistics may be misleading for RUNNING jobs.
END 14735300: Thu Dec 22 19:16:33 EET 2022
