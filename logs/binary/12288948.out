epochs: 4, learning rate: 2e-5, batch size: 8, model: TurkuNLP/bert-base-finnish-cased-v1 
Translated train and test
binary evaluation
Namespace(batch=8, dev=False, epochs=4, learning=2e-05, loss=True, model='TurkuNLP/bert-base-finnish-cased-v1', test='data/test_fi_deepl.jsonl', threshold=0.5, train='data/train_fi_deepl.jsonl')
tensor([18.9289,  3.3763,  3.1477, 16.6741, 55.6384,  1.7389], device='cuda:0')
DatasetDict({
    train: Dataset({
        features: ['text', 'labels'],
        num_rows: 159571
    })
    test: Dataset({
        features: ['text', 'labels'],
        num_rows: 63978
    })
})
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
{'loss': 0.2186, 'learning_rate': 1.5000000000000002e-05, 'epoch': 1.0}
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 1]
 ...
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
[[0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 0. 0. 1.]
 ...
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]]
{'eval_loss': 0.19705867767333984, 'eval_accuracy': 0.9307261871268249, 'eval_f1': 0.6818377602297201, 'eval_precision': 0.6177962794328087, 'eval_recall': 0.7606919750120135, 'eval_runtime': 531.612, 'eval_samples_per_second': 120.347, 'eval_steps_per_second': 3.762, 'epoch': 1.0}
{'loss': 0.1594, 'learning_rate': 1e-05, 'epoch': 2.0}
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 1]
 ...
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
[[0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 0. 0. 1.]
 ...
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]]
{'eval_loss': 0.18662483990192413, 'eval_accuracy': 0.9232236081152896, 'eval_f1': 0.679038159958181, 'eval_precision': 0.5734466394437701, 'eval_recall': 0.8322921672272946, 'eval_runtime': 532.1501, 'eval_samples_per_second': 120.225, 'eval_steps_per_second': 3.758, 'epoch': 2.0}
{'loss': 0.1169, 'learning_rate': 5e-06, 'epoch': 3.0}
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 1]
 ...
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
[[0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 0. 0. 1.]
 ...
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]]
{'eval_loss': 0.2171904593706131, 'eval_accuracy': 0.910719309762731, 'eval_f1': 0.6563176895306859, 'eval_precision': 0.5255854293148309, 'eval_recall': 0.873618452666987, 'eval_runtime': 532.4268, 'eval_samples_per_second': 120.163, 'eval_steps_per_second': 3.756, 'epoch': 3.0}
{'loss': 0.0807, 'learning_rate': 0.0, 'epoch': 4.0}
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 1]
 ...
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
[[0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 1.]
 ...
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]]
{'eval_loss': 0.26083454489707947, 'eval_accuracy': 0.9180812154177999, 'eval_f1': 0.6718016156302837, 'eval_precision': 0.5515114127082048, 'eval_recall': 0.8592023065833734, 'eval_runtime': 536.235, 'eval_samples_per_second': 119.31, 'eval_steps_per_second': 3.73, 'epoch': 4.0}
END: to 30.6.2022 17.05.12 +0300
