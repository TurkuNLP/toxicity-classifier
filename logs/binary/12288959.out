epochs: 4, learning rate: 2e-5, batch size: 8, model: xlm-roberta-base 
transfer from english train to translated finnish test
binary evaluation
Namespace(batch=8, dev=False, epochs=4, learning=2e-05, loss=True, model='xlm-roberta-base', test='data/test_fi_deepl.jsonl', threshold=0.5, train='data/train_en.jsonl')
tensor([18.9289,  3.3763,  3.1477, 16.6741, 55.6384,  1.7389], device='cuda:0')
DatasetDict({
    train: Dataset({
        features: ['text', 'labels'],
        num_rows: 159571
    })
    test: Dataset({
        features: ['text', 'labels'],
        num_rows: 63978
    })
})
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...
To disable this warning, you can either:
	- Avoid using `tokenizers` before the fork if possible
	- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)
{'loss': 0.262, 'learning_rate': 1.5000000000000002e-05, 'epoch': 1.0}
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 1]
 ...
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
[[0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 0. 0. 1.]
 ...
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]]
{'eval_loss': 0.5675889253616333, 'eval_accuracy': 0.909109381349839, 'eval_f1': 0.47964205816554806, 'eval_precision': 0.5433901054339011, 'eval_recall': 0.4292807944898286, 'eval_runtime': 536.4787, 'eval_samples_per_second': 119.255, 'eval_steps_per_second': 3.728, 'epoch': 1.0}
{'loss': 0.2116, 'learning_rate': 1e-05, 'epoch': 2.0}
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 1]
 ...
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
[[0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 0. 0. 1.]
 ...
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]]
{'eval_loss': 0.5249251127243042, 'eval_accuracy': 0.904029510144112, 'eval_f1': 0.4969687039161068, 'eval_precision': 0.5086365923193024, 'eval_recall': 0.48582412301777994, 'eval_runtime': 536.3255, 'eval_samples_per_second': 119.29, 'eval_steps_per_second': 3.729, 'epoch': 2.0}
{'loss': 0.1776, 'learning_rate': 5e-06, 'epoch': 3.0}
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 1]
 ...
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
[[0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 0. 0. 1.]
 ...
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]]
{'eval_loss': 0.5274813175201416, 'eval_accuracy': 0.8898371315139579, 'eval_f1': 0.5082333240301424, 'eval_precision': 0.4502410681171962, 'eval_recall': 0.5833733781835656, 'eval_runtime': 538.4282, 'eval_samples_per_second': 118.824, 'eval_steps_per_second': 3.715, 'epoch': 3.0}
{'loss': 0.1482, 'learning_rate': 0.0, 'epoch': 4.0}
[[0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 1 0 0 1]
 ...
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]
 [0 0 0 0 0 0]]
[[0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 1.]
 ...
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0.]]
{'eval_loss': 0.5895270705223083, 'eval_accuracy': 0.9014348682359561, 'eval_f1': 0.5255792958170328, 'eval_precision': 0.4955312810327706, 'eval_recall': 0.5595066474451386, 'eval_runtime': 536.9179, 'eval_samples_per_second': 119.158, 'eval_steps_per_second': 3.725, 'epoch': 4.0}
END: to 30.6.2022 17.42.23 +0300
